version: "3"
services:
  app_redis:
    container_name: app-on-redis
    image: grpc-go
    build:
      dockerfile: Dockerfile
      context: .
    command: -storage=Redis
    depends_on:
      - redis
    ports:
      - "8080:8080"
      - "9000:9000"
    env_file:
      - .env
    restart: unless-stopped

  app_postgres:
    container_name: app-on-postgres
    image: grpc-go
    build:
      dockerfile: Dockerfile
      context: .
    command: -storage=PostgreSQL
    depends_on:
      - postgres
    ports:
      - "8080:8080"
      - "9000:9000"
    env_file:
      - .env
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres
    profiles:
      - with_postgres
    env_file:
      - .env
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 1s
      timeout: 3s
      retries: 5

  redis:
    container_name: redis
    profiles:
      - with_redis
    image: redis
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
