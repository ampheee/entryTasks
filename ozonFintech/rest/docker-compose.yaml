version: "3.9"
services:
  app_redis_rest:
    container_name: app-on-redis-rest
    build:
      dockerfile: Dockerfile
      context: .
    command: -storage=Redis
    depends_on:
      - redis
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: unless-stopped

  app_postgres_rest:
    container_name: app-on-postgres-rest
    build:
      dockerfile: Dockerfile
      context: .
    command: -storage=PostgreSQL
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: unless-stopped

  postgres:
    image: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 1s
      timeout: 3s
      retries: 5

  redis:
    image: redis
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

